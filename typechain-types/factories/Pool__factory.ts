/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pool, PoolInterface } from "../Pool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620026043803806200260483398181016040528101906200003791906200033b565b6040518060400160405280600981526020017f556e6973776170563200000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f555632000000000000000000000000000000000000000000000000000000000081525060128260009080519060200190620000bd92919062000221565b508160019080519060200190620000d692919062000221565b508060ff1660808160ff16815250504660a08181525050620000fd6200019160201b60201c565b60c0818152505050505081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200054f565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001c5919062000492565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6463060405160200162000206959493929190620004f2565b60405160208183030381529060405280519060200120905090565b8280546200022f90620003b1565b90600052602060002090601f0160209004810192826200025357600085556200029f565b82601f106200026e57805160ff19168380011785556200029f565b828001600101855582156200029f579182015b828111156200029e57825182559160200191906001019062000281565b5b509050620002ae9190620002b2565b5090565b5b80821115620002cd576000816000905550600101620002b3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030382620002d6565b9050919050565b6200031581620002f6565b81146200032157600080fd5b50565b60008151905062000335816200030a565b92915050565b60008060408385031215620003555762000354620002d1565b5b6000620003658582860162000324565b9250506020620003788582860162000324565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003ca57607f821691505b60208210811415620003e157620003e062000382565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546200041681620003b1565b620004228186620003e7565b94506001821660008114620004405760018114620004525762000489565b60ff1983168652818601935062000489565b6200045d85620003f2565b60005b83811015620004815781548189015260018201915060208101905062000460565b838801955050505b50505092915050565b6000620004a0828462000407565b915081905092915050565b6000819050919050565b620004c081620004ab565b82525050565b6000819050919050565b620004db81620004c6565b82525050565b620004ec81620002f6565b82525050565b600060a082019050620005096000830188620004b5565b620005186020830187620004b5565b620005276040830186620004b5565b620005366060830185620004d0565b620005456080830184620004e1565b9695505050505050565b60805160a05160c0516120856200057f60003960006109c6015260006109920152600061096c01526120856000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806344df8e7011610097578063a9059cbb11610066578063a9059cbb1461028d578063d21220a7146102bd578063d505accf146102db578063dd62ed3e146102f757610100565b806344df8e701461020557806370a082311461020f5780637ecebe001461023f57806395d89b411461026f57610100565b806318160ddd116100d357806318160ddd1461017b57806323b872dd14610199578063313ce567146101c95780633644e515146101e757610100565b806306fdde0314610105578063095ea7b3146101235780630dfe1681146101535780631249c58b14610171575b600080fd5b61010d610327565b60405161011a9190611658565b60405180910390f35b61013d60048036038101906101389190611713565b6103b5565b60405161014a919061176e565b60405180910390f35b61015b6104a7565b6040516101689190611798565b60405180910390f35b6101796104cd565b005b61018361071a565b60405161019091906117c2565b60405180910390f35b6101b360048036038101906101ae91906117dd565b610720565b6040516101c0919061176e565b60405180910390f35b6101d161096a565b6040516101de919061184c565b60405180910390f35b6101ef61098e565b6040516101fc9190611880565b60405180910390f35b61020d6109eb565b005b6102296004803603810190610224919061189b565b610dea565b60405161023691906117c2565b60405180910390f35b6102596004803603810190610254919061189b565b610e02565b60405161026691906117c2565b60405180910390f35b610277610e1a565b6040516102849190611658565b60405180910390f35b6102a760048036038101906102a29190611713565b610ea8565b6040516102b4919061176e565b60405180910390f35b6102c5610fbc565b6040516102d29190611798565b60405180910390f35b6102f560048036038101906102f09190611920565b610fe2565b005b610311600480360381019061030c91906119c2565b6112db565b60405161031e91906117c2565b60405180910390f35b6000805461033490611a31565b80601f016020809104026020016040519081016040528092919081815260200182805461036090611a31565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049591906117c2565b60405180910390a36001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052a9190611798565b6020604051808303816000875af1158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d9190611a78565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105cc9190611798565b6020604051808303816000875af11580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f9190611a78565b90506000600854836106219190611ad4565b90506000600954836106339190611ad4565b9050600080600254141561067657610bb861065883856106539190611b08565b611300565b6106629190611ad4565b90506106716000610bb861137a565b6106b7565b6106b46008548460025461068a9190611b08565b6106949190611b91565b600954846002546106a59190611b08565b6106af9190611b91565b61144a565b90505b60008110156106fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f290611c0e565b60405180910390fd5b610705338261137a565b84600881905550836009819055505050505050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108565782816107d59190611ad4565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108a59190611ad4565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161095691906117c2565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146109c4576109bf611463565b6109e6565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a489190611798565b6020604051808303816000875af1158015610a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8b9190611a78565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aea9190611798565b6020604051808303816000875af1158015610b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d9190611a78565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006002548285610b849190611b08565b610b8e9190611b91565b905060006002548385610ba19190611b08565b610bab9190611b91565b9050600082118015610bbd5750600081115b610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf390611c7a565b60405180910390fd5b610c0633846114ef565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610c63929190611c9a565b600060405180830381600087803b158015610c7d57600080fd5b505af1158015610c91573d6000803e3d6000fd5b50505050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610cf09190611798565b6020604051808303816000875af1158015610d0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d339190611a78565b9450600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d909190611798565b6020604051808303816000875af1158015610daf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd39190611a78565b935084600881905550836009819055505050505050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60018054610e2790611a31565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5390611a31565b8015610ea05780601f10610e7557610100808354040283529160200191610ea0565b820191906000526020600020905b815481529060010190602001808311610e8357829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ef99190611ad4565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610faa91906117c2565b60405180910390a36001905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c90611d0f565b60405180910390fd5b6000600161103161098e565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016110b996959493929190611d2f565b604051602081830303815290604052805190602001206040516020016110e0929190611e08565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516111169493929190611e3f565b6020604051602081039080840390855afa158015611138573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156111ac57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e290611ed0565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516112ca91906117c2565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60006003821115611367578190506000600160028461131f9190611b91565b6113299190611ef0565b90505b818110156113615780915060028182856113469190611b91565b6113509190611ef0565b61135a9190611b91565b905061132c565b50611375565b6000821461137457600190505b5b919050565b806002600082825461138c9190611ef0565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161143e91906117c2565b60405180910390a35050565b6000818310611459578161145b565b825b905092915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516114959190611fe5565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016114d4959493929190611ffc565b60405160208183030381529060405280519060200120905090565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461153e9190611ad4565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115b391906117c2565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115f95780820151818401526020810190506115de565b83811115611608576000848401525b50505050565b6000601f19601f8301169050919050565b600061162a826115bf565b61163481856115ca565b93506116448185602086016115db565b61164d8161160e565b840191505092915050565b60006020820190508181036000830152611672818461161f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116aa8261167f565b9050919050565b6116ba8161169f565b81146116c557600080fd5b50565b6000813590506116d7816116b1565b92915050565b6000819050919050565b6116f0816116dd565b81146116fb57600080fd5b50565b60008135905061170d816116e7565b92915050565b6000806040838503121561172a5761172961167a565b5b6000611738858286016116c8565b9250506020611749858286016116fe565b9150509250929050565b60008115159050919050565b61176881611753565b82525050565b6000602082019050611783600083018461175f565b92915050565b6117928161169f565b82525050565b60006020820190506117ad6000830184611789565b92915050565b6117bc816116dd565b82525050565b60006020820190506117d760008301846117b3565b92915050565b6000806000606084860312156117f6576117f561167a565b5b6000611804868287016116c8565b9350506020611815868287016116c8565b9250506040611826868287016116fe565b9150509250925092565b600060ff82169050919050565b61184681611830565b82525050565b6000602082019050611861600083018461183d565b92915050565b6000819050919050565b61187a81611867565b82525050565b60006020820190506118956000830184611871565b92915050565b6000602082840312156118b1576118b061167a565b5b60006118bf848285016116c8565b91505092915050565b6118d181611830565b81146118dc57600080fd5b50565b6000813590506118ee816118c8565b92915050565b6118fd81611867565b811461190857600080fd5b50565b60008135905061191a816118f4565b92915050565b600080600080600080600060e0888a03121561193f5761193e61167a565b5b600061194d8a828b016116c8565b975050602061195e8a828b016116c8565b965050604061196f8a828b016116fe565b95505060606119808a828b016116fe565b94505060806119918a828b016118df565b93505060a06119a28a828b0161190b565b92505060c06119b38a828b0161190b565b91505092959891949750929550565b600080604083850312156119d9576119d861167a565b5b60006119e7858286016116c8565b92505060206119f8858286016116c8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a4957607f821691505b60208210811415611a5d57611a5c611a02565b5b50919050565b600081519050611a72816116e7565b92915050565b600060208284031215611a8e57611a8d61167a565b5b6000611a9c84828501611a63565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611adf826116dd565b9150611aea836116dd565b925082821015611afd57611afc611aa5565b5b828203905092915050565b6000611b13826116dd565b9150611b1e836116dd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b5757611b56611aa5565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b9c826116dd565b9150611ba7836116dd565b925082611bb757611bb6611b62565b5b828204905092915050565b7f696e73756666696369656e74206c697175696469747900000000000000000000600082015250565b6000611bf86016836115ca565b9150611c0382611bc2565b602082019050919050565b60006020820190508181036000830152611c2781611beb565b9050919050565b7f6e6f7420656e6f756768206c6971756964697479000000000000000000000000600082015250565b6000611c646014836115ca565b9150611c6f82611c2e565b602082019050919050565b60006020820190508181036000830152611c9381611c57565b9050919050565b6000604082019050611caf6000830185611789565b611cbc60208301846117b3565b9392505050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611cf96017836115ca565b9150611d0482611cc3565b602082019050919050565b60006020820190508181036000830152611d2881611cec565b9050919050565b600060c082019050611d446000830189611871565b611d516020830188611789565b611d5e6040830187611789565b611d6b60608301866117b3565b611d7860808301856117b3565b611d8560a08301846117b3565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611dd1600283611d90565b9150611ddc82611d9b565b600282019050919050565b6000819050919050565b611e02611dfd82611867565b611de7565b82525050565b6000611e1382611dc4565b9150611e1f8285611df1565b602082019150611e2f8284611df1565b6020820191508190509392505050565b6000608082019050611e546000830187611871565b611e61602083018661183d565b611e6e6040830185611871565b611e7b6060830184611871565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611eba600e836115ca565b9150611ec582611e84565b602082019050919050565b60006020820190508181036000830152611ee981611ead565b9050919050565b6000611efb826116dd565b9150611f06836116dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f3b57611f3a611aa5565b5b828201905092915050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611f7381611a31565b611f7d8186611f46565b94506001821660008114611f985760018114611fa957611fdc565b60ff19831686528186019350611fdc565b611fb285611f51565b60005b83811015611fd457815481890152600182019150602081019050611fb5565b838801955050505b50505092915050565b6000611ff18284611f66565b915081905092915050565b600060a0820190506120116000830188611871565b61201e6020830187611871565b61202b6040830186611871565b61203860608301856117b3565b6120456080830184611789565b969550505050505056fea26469706673582212200f810645754760daae04721bfcf40725802cb06341326bf918c1988d8e21173364736f6c634300080a0033";

type PoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pool__factory extends ContractFactory {
  constructor(...args: PoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Pool";
  }

  deploy(
    _token0: string,
    _token1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pool> {
    return super.deploy(_token0, _token1, overrides || {}) as Promise<Pool>;
  }
  getDeployTransaction(
    _token0: string,
    _token1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  attach(address: string): Pool {
    return super.attach(address) as Pool;
  }
  connect(signer: Signer): Pool__factory {
    return super.connect(signer) as Pool__factory;
  }
  static readonly contractName: "Pool";
  public readonly contractName: "Pool";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new utils.Interface(_abi) as PoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pool {
    return new Contract(address, _abi, signerOrProvider) as Pool;
  }
}
