/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Router, RouterInterface } from "../Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "_swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountB",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountB",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200245d3803806200245d8339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b612333806200012a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632388dac11461005c57806342712a671461008e578063472b43f3146100be578063ca3d6539146100ee578063f5901d4d14610120575b600080fd5b6100766004803603810190610071919061137a565b61013c565b60405161008593929190611404565b60405180910390f35b6100a860048036038101906100a391906114a0565b61033d565b6040516100b591906115e6565b60405180910390f35b6100d860048036038101906100d391906114a0565b6105d6565b6040516100e591906115e6565b60405180910390f35b61010860048036038101906101039190611608565b61087b565b60405161011793929190611404565b60405180910390f35b61013a600480360381019061013591906118bc565b610b49565b005b60008060008073__$8f1551ddb6659c4f61d022a243d43a4098$__636d91c0e260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b8b6040518463ffffffff1660e01b815260040161019d93929190611956565b602060405180830381865af41580156101ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101de91906119a2565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3383856040518463ffffffff1660e01b815260040161021d939291906119de565b6020604051808303816000875af115801561023c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102609190611a4d565b508073ffffffffffffffffffffffffffffffffffffffff166389afcb44866040518263ffffffff1660e01b815260040161029a9190611a7a565b60408051808303816000875af11580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc9190611aaa565b809450819550505086841180156102f257508583115b610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890611b47565b60405180910390fd5b50955095509592505050565b6060600073__$8f1551ddb6659c4f61d022a243d43a4098$__63192128b260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168988886040518563ffffffff1660e01b815260040161039e9493929190611c39565b600060405180830381865af41580156103bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103e49190611d10565b905085816000815181106103fb576103fa611d59565b5b602002602001015110610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043a90611dd4565b60405180910390fd5b61057d8585600081811061045a57610459611d59565b5b905060200201602081019061046f9190611df4565b3373__$8f1551ddb6659c4f61d022a243d43a4098$__636d91c0e260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a8a60008181106104bf576104be611d59565b5b90506020020160208101906104d49190611df4565b8b8b60018181106104e8576104e7611d59565b5b90506020020160208101906104fd9190611df4565b6040518463ffffffff1660e01b815260040161051b93929190611956565b602060405180830381865af4158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c91906119a2565b846000815181106105705761056f611d59565b5b6020026020010151610ea4565b6105c981868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505085610b49565b8091505095945050505050565b6060600073__$8f1551ddb6659c4f61d022a243d43a4098$__63bb7b9c7660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168988886040518563ffffffff1660e01b81526004016106379493929190611c39565b600060405180830381865af4158015610654573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061067d9190611d10565b905085816001835161068f9190611e50565b815181106106a05761069f611d59565b5b6020026020010151116106e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106df90611ed0565b60405180910390fd5b610822858560008181106106ff576106fe611d59565b5b90506020020160208101906107149190611df4565b3373__$8f1551ddb6659c4f61d022a243d43a4098$__636d91c0e260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a8a600081811061076457610763611d59565b5b90506020020160208101906107799190611df4565b8b8b600181811061078d5761078c611d59565b5b90506020020160208101906107a29190611df4565b6040518463ffffffff1660e01b81526004016107c093929190611956565b602060405180830381865af41580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080191906119a2565b8460008151811061081557610814611d59565b5b6020026020010151610ea4565b61086e81868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505085610b49565b8091505095945050505050565b60008060008073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a439058c8c6040518363ffffffff1660e01b81526004016108f2929190611ef0565b602060405180830381865afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093391906119a2565b73ffffffffffffffffffffffffffffffffffffffff1614156109ef5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9c653968b8b6040518363ffffffff1660e01b81526004016109aa929190611ef0565b6020604051808303816000875af11580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ed91906119a2565b505b6109fd8a8a8a8a8a8a611014565b8093508194505050600073__$8f1551ddb6659c4f61d022a243d43a4098$__636d91c0e260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168d8d6040518463ffffffff1660e01b8152600401610a6293929190611956565b602060405180830381865af4158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa391906119a2565b9050610ab18b338387610ea4565b610abd8a338386610ea4565b8073ffffffffffffffffffffffffffffffffffffffff16636a627842866040518263ffffffff1660e01b8152600401610af69190611a7a565b6020604051808303816000875af1158015610b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b399190611f19565b9150509750975097945050505050565b60005b60018351610b5a9190611e50565b811015610e9e57600080848381518110610b7757610b76611d59565b5b602002602001015185600185610b8d9190611f46565b81518110610b9e57610b9d611d59565b5b602002602001015191509150600073__$8f1551ddb6659c4f61d022a243d43a4098$__63544caa5684846040518363ffffffff1660e01b8152600401610be5929190611f9c565b6040805180830381865af4158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c259190611fc5565b509050600087600186610c389190611f46565b81518110610c4957610c48611d59565b5b602002602001015190506000808373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610c9157826000610c95565b6000835b91509150600060028a51610ca99190611e50565b8810610cb55788610d78565b73__$8f1551ddb6659c4f61d022a243d43a4098$__636d91c0e260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16888d60028d610cff9190611f46565b81518110610d1057610d0f611d59565b5b60200260200101516040518463ffffffff1660e01b8152600401610d3693929190611956565b602060405180830381865af4158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7791906119a2565b5b905073__$8f1551ddb6659c4f61d022a243d43a4098$__636d91c0e260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1689896040518463ffffffff1660e01b8152600401610dd593929190611956565b602060405180830381865af4158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1691906119a2565b73ffffffffffffffffffffffffffffffffffffffff16636d9a640a8484846040518463ffffffff1660e01b8152600401610e5293929190612005565b600060405180830381600087803b158015610e6c57600080fd5b505af1158015610e80573d6000803e3d6000fd5b50505050505050505050508080610e969061203c565b915050610b4c565b50505050565b6000808573ffffffffffffffffffffffffffffffffffffffff16858585604051602401610ed3939291906119de565b6040516020818303038152906040527f23b872dd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f5d91906120ff565b6000604051808303816000865af19150503d8060008114610f9a576040519150601f19603f3d011682016040523d82523d6000602084013e610f9f565b606091505b5091509150818015610fcd5750600081511480610fcc575080806020019051810190610fcb9190611a4d565b5b5b61100c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100390612162565b60405180910390fd5b505050505050565b60008060008073__$8f1551ddb6659c4f61d022a243d43a4098$__633274946160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c8c6040518463ffffffff1660e01b815260040161107593929190611956565b6040805180830381865af4158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190611aaa565b915091506000821480156110c95750600081145b156110d957818180945081955050505b600073__$8f1551ddb6659c4f61d022a243d43a4098$__63ad615dec8a85856040518463ffffffff1660e01b815260040161111693929190612182565b602060405180830381865af4158015611133573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111579190611f19565b90508781116111b257858110156111a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119a90612205565b60405180910390fd5b888180955081965050506112c4565b600073__$8f1551ddb6659c4f61d022a243d43a4098$__63ad615dec8a85876040518463ffffffff1660e01b81526004016111ef93929190612182565b602060405180830381865af415801561120c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112309190611f19565b905089811115611275576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126c90612271565b60405180910390fd5b878110156112b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112af906122dd565b60405180910390fd5b81898096508197505050505b505050965096945050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611311826112e6565b9050919050565b61132181611306565b811461132c57600080fd5b50565b60008135905061133e81611318565b92915050565b6000819050919050565b61135781611344565b811461136257600080fd5b50565b6000813590506113748161134e565b92915050565b600080600080600060a08688031215611396576113956112dc565b5b60006113a48882890161132f565b95505060206113b58882890161132f565b94505060406113c688828901611365565b93505060606113d788828901611365565b92505060806113e88882890161132f565b9150509295509295909350565b6113fe81611344565b82525050565b600060608201905061141960008301866113f5565b61142660208301856113f5565b61143360408301846113f5565b949350505050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114605761145f61143b565b5b8235905067ffffffffffffffff81111561147d5761147c611440565b5b60208301915083602082028301111561149957611498611445565b5b9250929050565b6000806000806000608086880312156114bc576114bb6112dc565b5b60006114ca88828901611365565b95505060206114db88828901611365565b945050604086013567ffffffffffffffff8111156114fc576114fb6112e1565b5b6115088882890161144a565b9350935050606061151b8882890161132f565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61155d81611344565b82525050565b600061156f8383611554565b60208301905092915050565b6000602082019050919050565b600061159382611528565b61159d8185611533565b93506115a883611544565b8060005b838110156115d95781516115c08882611563565b97506115cb8361157b565b9250506001810190506115ac565b5085935050505092915050565b600060208201905081810360008301526116008184611588565b905092915050565b600080600080600080600060e0888a031215611627576116266112dc565b5b60006116358a828b0161132f565b97505060206116468a828b0161132f565b96505060406116578a828b01611365565b95505060606116688a828b01611365565b94505060806116798a828b01611365565b93505060a061168a8a828b01611365565b92505060c061169b8a828b0161132f565b91505092959891949750929550565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116f3826116aa565b810181811067ffffffffffffffff82111715611712576117116116bb565b5b80604052505050565b60006117256112d2565b905061173182826116ea565b919050565b600067ffffffffffffffff821115611751576117506116bb565b5b602082029050602081019050919050565b600061177561177084611736565b61171b565b9050808382526020820190506020840283018581111561179857611797611445565b5b835b818110156117c157806117ad8882611365565b84526020840193505060208101905061179a565b5050509392505050565b600082601f8301126117e0576117df61143b565b5b81356117f0848260208601611762565b91505092915050565b600067ffffffffffffffff821115611814576118136116bb565b5b602082029050602081019050919050565b6000611838611833846117f9565b61171b565b9050808382526020820190506020840283018581111561185b5761185a611445565b5b835b818110156118845780611870888261132f565b84526020840193505060208101905061185d565b5050509392505050565b600082601f8301126118a3576118a261143b565b5b81356118b3848260208601611825565b91505092915050565b6000806000606084860312156118d5576118d46112dc565b5b600084013567ffffffffffffffff8111156118f3576118f26112e1565b5b6118ff868287016117cb565b935050602084013567ffffffffffffffff8111156119205761191f6112e1565b5b61192c8682870161188e565b925050604061193d8682870161132f565b9150509250925092565b61195081611306565b82525050565b600060608201905061196b6000830186611947565b6119786020830185611947565b6119856040830184611947565b949350505050565b60008151905061199c81611318565b92915050565b6000602082840312156119b8576119b76112dc565b5b60006119c68482850161198d565b91505092915050565b6119d881611306565b82525050565b60006060820190506119f360008301866119cf565b611a0060208301856119cf565b611a0d60408301846113f5565b949350505050565b60008115159050919050565b611a2a81611a15565b8114611a3557600080fd5b50565b600081519050611a4781611a21565b92915050565b600060208284031215611a6357611a626112dc565b5b6000611a7184828501611a38565b91505092915050565b6000602082019050611a8f60008301846119cf565b92915050565b600081519050611aa48161134e565b92915050565b60008060408385031215611ac157611ac06112dc565b5b6000611acf85828601611a95565b9250506020611ae085828601611a95565b9150509250929050565b600082825260208201905092915050565b7f496e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b6000611b31601383611aea565b9150611b3c82611afb565b602082019050919050565b60006020820190508181036000830152611b6081611b24565b9050919050565b611b7081611344565b82525050565b600082825260208201905092915050565b6000819050919050565b611b9a81611306565b82525050565b6000611bac8383611b91565b60208301905092915050565b6000611bc7602084018461132f565b905092915050565b6000602082019050919050565b6000611be88385611b76565b9350611bf382611b87565b8060005b85811015611c2c57611c098284611bb8565b611c138882611ba0565b9750611c1e83611bcf565b925050600181019050611bf7565b5085925050509392505050565b6000606082019050611c4e6000830187611947565b611c5b6020830186611b67565b8181036040830152611c6e818486611bdc565b905095945050505050565b6000611c8c611c8784611736565b61171b565b90508083825260208201905060208402830185811115611caf57611cae611445565b5b835b81811015611cd85780611cc48882611a95565b845260208401935050602081019050611cb1565b5050509392505050565b600082601f830112611cf757611cf661143b565b5b8151611d07848260208601611c79565b91505092915050565b600060208284031215611d2657611d256112dc565b5b600082015167ffffffffffffffff811115611d4457611d436112e1565b5b611d5084828501611ce2565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f65786365737369766520616d6f756e7400000000000000000000000000000000600082015250565b6000611dbe601083611aea565b9150611dc982611d88565b602082019050919050565b60006020820190508181036000830152611ded81611db1565b9050919050565b600060208284031215611e0a57611e096112dc565b5b6000611e188482850161132f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e5b82611344565b9150611e6683611344565b925082821015611e7957611e78611e21565b5b828203905092915050565b7f696e73756666696369656e7420616d6f756e7400000000000000000000000000600082015250565b6000611eba601383611aea565b9150611ec582611e84565b602082019050919050565b60006020820190508181036000830152611ee981611ead565b9050919050565b6000604082019050611f0560008301856119cf565b611f1260208301846119cf565b9392505050565b600060208284031215611f2f57611f2e6112dc565b5b6000611f3d84828501611a95565b91505092915050565b6000611f5182611344565b9150611f5c83611344565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f9157611f90611e21565b5b828201905092915050565b6000604082019050611fb16000830185611947565b611fbe6020830184611947565b9392505050565b60008060408385031215611fdc57611fdb6112dc565b5b6000611fea8582860161198d565b9250506020611ffb8582860161198d565b9150509250929050565b600060608201905061201a60008301866113f5565b61202760208301856113f5565b61203460408301846119cf565b949350505050565b600061204782611344565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561207a57612079611e21565b5b600182019050919050565b600081519050919050565b600081905092915050565b60005b838110156120b957808201518184015260208101905061209e565b838111156120c8576000848401525b50505050565b60006120d982612085565b6120e38185612090565b93506120f381856020860161209b565b80840191505092915050565b600061210b82846120ce565b915081905092915050565b7f536166655472616e736665724661696c65640000000000000000000000000000600082015250565b600061214c601283611aea565b915061215782612116565b602082019050919050565b6000602082019050818103600083015261217b8161213f565b9050919050565b60006060820190506121976000830186611b67565b6121a46020830185611b67565b6121b16040830184611b67565b949350505050565b7f696e73756666696369656e7420616d6f756e7442200000000000000000000000600082015250565b60006121ef601583611aea565b91506121fa826121b9565b602082019050919050565b6000602082019050818103600083015261221e816121e2565b9050919050565b7f6c6f7720616d6f756e74204120616e6420420000000000000000000000000000600082015250565b600061225b601283611aea565b915061226682612225565b602082019050919050565b6000602082019050818103600083015261228a8161224e565b9050919050565b7f696e73756666696369656e7420616d6f756e7420410000000000000000000000600082015250565b60006122c7601583611aea565b91506122d282612291565b602082019050919050565b600060208201905081810360008301526122f6816122ba565b905091905056fea26469706673582212206e493bab1999750f0938023d01e4619c672654a192f9e7f96c07f2a8084cab6964736f6c634300080a0033";

type RouterConstructorParams =
  | [linkLibraryAddresses: RouterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Router__factory.linkBytecode(linkLibraryAddresses), signer);
    }
    this.contractName = "Router";
  }

  static linkBytecode(linkLibraryAddresses: RouterLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$8f1551ddb6659c4f61d022a243d43a4098\\$__", "g"),
      linkLibraryAddresses["contracts/Library.sol:Library"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _factoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Router> {
    return super.deploy(_factoryAddress, overrides || {}) as Promise<Router>;
  }
  getDeployTransaction(
    _factoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factoryAddress, overrides || {});
  }
  attach(address: string): Router {
    return super.attach(address) as Router;
  }
  connect(signer: Signer): Router__factory {
    return super.connect(signer) as Router__factory;
  }
  static readonly contractName: "Router";
  public readonly contractName: "Router";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}

export interface RouterLibraryAddresses {
  ["contracts/Library.sol:Library"]: string;
}
