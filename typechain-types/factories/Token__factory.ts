/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001cbe38038062001cbe8339818101604052810190620000379190620004a4565b828260128260009080519060200190620000539291906200021c565b5081600190805190602001906200006c9291906200021c565b508060ff1660808160ff16815250504660a0818152505062000093620000b860201b60201c565b60c08181525050505050620000af33826200014860201b60201c565b505050620007de565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ec91906200064e565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200012d959493929190620006d8565b60405160208183030381529060405280519060200120905090565b80600260008282546200015c919062000764565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002109190620007c1565b60405180910390a35050565b8280546200022a906200056d565b90600052602060002090601f0160209004810192826200024e57600085556200029a565b82601f106200026957805160ff19168380011785556200029a565b828001600101855582156200029a579182015b82811115620002995782518255916020019190600101906200027c565b5b509050620002a99190620002ad565b5090565b5b80821115620002c8576000816000905550600101620002ae565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200033582620002ea565b810181811067ffffffffffffffff82111715620003575762000356620002fb565b5b80604052505050565b60006200036c620002cc565b90506200037a82826200032a565b919050565b600067ffffffffffffffff8211156200039d576200039c620002fb565b5b620003a882620002ea565b9050602081019050919050565b60005b83811015620003d5578082015181840152602081019050620003b8565b83811115620003e5576000848401525b50505050565b600062000402620003fc846200037f565b62000360565b905082815260208101848484011115620004215762000420620002e5565b5b6200042e848285620003b5565b509392505050565b600082601f8301126200044e576200044d620002e0565b5b815162000460848260208601620003eb565b91505092915050565b6000819050919050565b6200047e8162000469565b81146200048a57600080fd5b50565b6000815190506200049e8162000473565b92915050565b600080600060608486031215620004c057620004bf620002d6565b5b600084015167ffffffffffffffff811115620004e157620004e0620002db565b5b620004ef8682870162000436565b935050602084015167ffffffffffffffff811115620005135762000512620002db565b5b620005218682870162000436565b925050604062000534868287016200048d565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058657607f821691505b602082108114156200059d576200059c6200053e565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620005d2816200056d565b620005de8186620005a3565b94506001821660008114620005fc57600181146200060e5762000645565b60ff1983168652818601935062000645565b6200061985620005ae565b60005b838110156200063d578154818901526001820191506020810190506200061c565b838801955050505b50505092915050565b60006200065c8284620005c3565b915081905092915050565b6000819050919050565b6200067c8162000667565b82525050565b6200068d8162000469565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006c08262000693565b9050919050565b620006d281620006b3565b82525050565b600060a082019050620006ef600083018862000671565b620006fe602083018762000671565b6200070d604083018662000671565b6200071c606083018562000682565b6200072b6080830184620006c7565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620007718262000469565b91506200077e8362000469565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620007b657620007b562000735565b5b828201905092915050565b6000602082019050620007d8600083018462000682565b92915050565b60805160a05160c0516114b06200080e60003960006106b7015260006106830152600061065d01526114b06000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101915780637ecebe00146101c157806395d89b41146101f1578063a9059cbb1461020f578063d505accf1461023f578063dd62ed3e1461025b576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633644e51514610173575b600080fd5b6100c161028b565b6040516100ce9190610cf1565b60405180910390f35b6100f160048036038101906100ec9190610dac565b610319565b6040516100fe9190610e07565b60405180910390f35b61010f61040b565b60405161011c9190610e31565b60405180910390f35b61013f600480360381019061013a9190610e4c565b610411565b60405161014c9190610e07565b60405180910390f35b61015d61065b565b60405161016a9190610ebb565b60405180910390f35b61017b61067f565b6040516101889190610eef565b60405180910390f35b6101ab60048036038101906101a69190610f0a565b6106dc565b6040516101b89190610e31565b60405180910390f35b6101db60048036038101906101d69190610f0a565b6106f4565b6040516101e89190610e31565b60405180910390f35b6101f961070c565b6040516102069190610cf1565b60405180910390f35b61022960048036038101906102249190610dac565b61079a565b6040516102369190610e07565b60405180910390f35b61025960048036038101906102549190610f8f565b6108ae565b005b61027560048036038101906102709190611031565b610ba7565b6040516102829190610e31565b60405180910390f35b60008054610298906110a0565b80601f01602080910402602001604051908101604052809291908181526020018280546102c4906110a0565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103f99190610e31565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105475782816104c69190611101565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105969190611101565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516106479190610e31565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106b5576106b0610bcc565b6106d7565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b60018054610719906110a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610745906110a0565b80156107925780601f1061076757610100808354040283529160200191610792565b820191906000526020600020905b81548152906001019060200180831161077557829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107eb9190611101565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161089c9190610e31565b60405180910390a36001905092915050565b428410156108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611181565b60405180910390fd5b600060016108fd61067f565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610985969594939291906111b0565b604051602081830303815290604052805190602001206040516020016109ac929190611289565b60405160208183030381529060405280519060200120858585604051600081526020016040526040516109e294939291906112c0565b6020604051602081039080840390855afa158015610a04573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610a7857508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90611351565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b969190610e31565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610bfe9190611410565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c3d959493929190611427565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c92578082015181840152602081019050610c77565b83811115610ca1576000848401525b50505050565b6000601f19601f8301169050919050565b6000610cc382610c58565b610ccd8185610c63565b9350610cdd818560208601610c74565b610ce681610ca7565b840191505092915050565b60006020820190508181036000830152610d0b8184610cb8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4382610d18565b9050919050565b610d5381610d38565b8114610d5e57600080fd5b50565b600081359050610d7081610d4a565b92915050565b6000819050919050565b610d8981610d76565b8114610d9457600080fd5b50565b600081359050610da681610d80565b92915050565b60008060408385031215610dc357610dc2610d13565b5b6000610dd185828601610d61565b9250506020610de285828601610d97565b9150509250929050565b60008115159050919050565b610e0181610dec565b82525050565b6000602082019050610e1c6000830184610df8565b92915050565b610e2b81610d76565b82525050565b6000602082019050610e466000830184610e22565b92915050565b600080600060608486031215610e6557610e64610d13565b5b6000610e7386828701610d61565b9350506020610e8486828701610d61565b9250506040610e9586828701610d97565b9150509250925092565b600060ff82169050919050565b610eb581610e9f565b82525050565b6000602082019050610ed06000830184610eac565b92915050565b6000819050919050565b610ee981610ed6565b82525050565b6000602082019050610f046000830184610ee0565b92915050565b600060208284031215610f2057610f1f610d13565b5b6000610f2e84828501610d61565b91505092915050565b610f4081610e9f565b8114610f4b57600080fd5b50565b600081359050610f5d81610f37565b92915050565b610f6c81610ed6565b8114610f7757600080fd5b50565b600081359050610f8981610f63565b92915050565b600080600080600080600060e0888a031215610fae57610fad610d13565b5b6000610fbc8a828b01610d61565b9750506020610fcd8a828b01610d61565b9650506040610fde8a828b01610d97565b9550506060610fef8a828b01610d97565b94505060806110008a828b01610f4e565b93505060a06110118a828b01610f7a565b92505060c06110228a828b01610f7a565b91505092959891949750929550565b6000806040838503121561104857611047610d13565b5b600061105685828601610d61565b925050602061106785828601610d61565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b857607f821691505b602082108114156110cc576110cb611071565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061110c82610d76565b915061111783610d76565b92508282101561112a576111296110d2565b5b828203905092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b600061116b601783610c63565b915061117682611135565b602082019050919050565b6000602082019050818103600083015261119a8161115e565b9050919050565b6111aa81610d38565b82525050565b600060c0820190506111c56000830189610ee0565b6111d260208301886111a1565b6111df60408301876111a1565b6111ec6060830186610e22565b6111f96080830185610e22565b61120660a0830184610e22565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000611252600283611211565b915061125d8261121c565b600282019050919050565b6000819050919050565b61128361127e82610ed6565b611268565b82525050565b600061129482611245565b91506112a08285611272565b6020820191506112b08284611272565b6020820191508190509392505050565b60006080820190506112d56000830187610ee0565b6112e26020830186610eac565b6112ef6040830185610ee0565b6112fc6060830184610ee0565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b600061133b600e83610c63565b915061134682611305565b602082019050919050565b6000602082019050818103600083015261136a8161132e565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461139e816110a0565b6113a88186611371565b945060018216600081146113c357600181146113d457611407565b60ff19831686528186019350611407565b6113dd8561137c565b60005b838110156113ff578154818901526001820191506020810190506113e0565b838801955050505b50505092915050565b600061141c8284611391565b915081905092915050565b600060a08201905061143c6000830188610ee0565b6114496020830187610ee0565b6114566040830186610ee0565b6114636060830185610e22565b61147060808301846111a1565b969550505050505056fea26469706673582212207a00ce5906907c3495cbc836ebc7bcb37c5a69509775ded344f0fa96cb23f9bd64736f6c634300080a0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Token";
  }

  deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly contractName: "Token";
  public readonly contractName: "Token";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
